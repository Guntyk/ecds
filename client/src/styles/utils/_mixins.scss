@function get-font-style($key, $property) {
  @return map-get($property, $key);
}

@function get-letter-spacing($type) {
  @return map-get($letterSpacing, $type) or 0em;
}

@mixin typography($key, $weight: regular) {
  $font: if(
    $key == 'h1' or $key == 'h2' or $key == 'h3' or $key == 'h4' or $key == 'logoText',
    $headlineFont,
    $bodyFont
  );
  font-family: $font;
  font-size: map-get($fontSizes, $key);
  line-height: map-get($lineHeights, $key);
  @media (max-width: 768px) {
    font-size: map-get($fontSizesMobile, $key);
    line-height: map-get($lineHeightsMobile, $key);
  }
  font-weight: map-get($fontWeights, $weight);
  letter-spacing: if(
    $key == 'h1' or $key == 'h2' or $key == 'h3' or $key == 'h4' or $key == 'logoText',
    0em,
    get-letter-spacing(
      if(
        $key == 'body1' or $key == 'body2' or $key == 'body3' or $key == 'body4',
        'body',
        if(
          $key == 'fieldPlaceholder' or $key == 'fieldTitle' or $key == 'fieldDescription',
          'field',
          if($key == 'buttonSmall', 'buttonSmall', 'button')
        )
      )
    )
  );
}

@mixin container($maxWidth: 123.2rem) {
  position: relative;
  margin: $centeredMargin;
  padding-inline: 1.6rem;
  max-width: 123.2rem;

  @media (max-width: 557px) {
    max-width: unset;
  }
}

@mixin dynamic-label-styles($bgColor, $textColor) {
  color: $textColor;
  background: $bgColor;
}

@mixin dynamic-input-styles($bgColor, $borderColor, $borderWidth) {
  border: $borderWidth solid $borderColor;
  background: $bgColor;
}
